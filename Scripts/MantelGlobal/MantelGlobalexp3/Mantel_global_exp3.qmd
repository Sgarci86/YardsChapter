------------------------------------------------------------------------

### Mantel global wrangling and visuals

```{r}
library(tidyverse)
library(dplyr)
library(reshape2)
library(foreach)


#Reading in Mantel Global Results 
Mantel_globalexp3<-readRDS("exp3_global_mantel.rds")
View(Mantel_globalexp3)
#Pulling out the Mantel statistic column
Mantelstats<- foreach(i=seq_along(Mantel_globalexp3)) %do% {
  Mantel_globalexp3[[i]]$statistic
}

#have to rename first then tibble so it is easier to work with 
names(Mantelstats) <- c(1:60)
tibMantel<-as_tibble(Mantelstats)
Mantelstatonly<-tibMantel %>% 
  select(cols = c(1:60)) %>% melt(cols=c("1":"60"), id.vars=NULL) %>% 
  select(cols = "value") %>% dplyr::rename(Mantelglobal = cols)

#pulling out the pvalue column in case it is needed then combining the mantel r column
#MantelcolumnsNeeded has both the mantel r and p value columns 
Mantelpvalue<- foreach(i=seq_along(Mantel_globalexp3)) %do% {
  Mantel_globalexp3[[i]]$signif
}
names(Mantelpvalue) <- c(1:60)
tibMantelpvalue<-as_tibble(Mantelpvalue)
MantelcolumnsNeeded<-tibMantelpvalue %>% 
  select(cols = c(1:60)) %>% melt(cols=c("1":"60"), id.vars=NULL) %>% 
  select(cols = "value") %>% dplyr::rename(pvalue = cols) %>% cbind(Mantelstatonly)

```

```{r}
#reading in the parameter table from the Behavior Space Run 1-480
ParameterTableMimic<-read.csv("table_exp3Nurseries1_4_constraints.csv")
Param<-ParameterTableMimic 
#binding the parameters with the mantel r and pvalue columns
global_param<-cbind(MantelcolumnsNeeded, Param)
#View(global_param)

```

```{r}
#as.factor on the categorical variable made the plot NOT have gaps. That makes sense
#using geom_tile to produce the correlogram

#just renaming this column 
global_param<-global_param %>% dplyr::rename("Global.Mantel.r" = Mantelglobal)
global_param<-global_param %>% dplyr::rename("Nursery" = Num.nursery)


n=10

significance<-colMeans(matrix(global_param$pvalue, nrow=10))  #this is the calculation of rows
significance<-as.data.frame(significance)
significance<-significance[rep(seq_len(nrow(significance)), each = 10), ]  #these are the repeats 
as.data.frame(significance)


#combine all columns for final 
global_param<-cbind(global_param,significance)
 
write.csv(global_param, "MantelGlobalFinalexp3.csv")




#now plot the final resulting file
ggplot(global_param, aes(y = as.factor(Nursery), x = Constraints)) + scale_fill_steps(low = "cyan", high = "salmon", limits=c(0,0.25), breaks=c(0,0.05,0.1,0.15,0.2,0.25)) + geom_tile(aes(fill=Global.Mantel.r)) + geom_point(aes(size = significance < 0.05)) +
theme(panel.grid = element_blank(), panel.background =
element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12), strip.text.y.right = element_text(vjust= -1)) + labs(x = "Constraints", y = "Nursery", title = "Global Mantel r", subtitle = "Contraints, Nurseries 1&4") + theme(plot.title=element_text(hjust= 0.04, vjust= 1, size = 14), plot.subtitle = element_text(hjust= 0.045, vjust= 1, size = 13), axis.title.x=element_text(size=13, vjust = -1), axis.title.y=element_text(size=13), axis.text = element_text(size=12), legend.text = element_text(size = 12), legend.title = element_text(size = 12, vjust=4), axis.ticks = element_blank()) + scale_size_manual(values = c("FALSE" = 0, "TRUE" = 3), name = "p-value < 0.05") + theme(legend.box.spacing = unit(2, "cm")) 


```



